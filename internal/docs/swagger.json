{
    "swagger": "2.0",
    "info": {
        "description": "Backend API for managing assignments, questions, classrooms and more.",
        "title": "Lumen Slate API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/assignments": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments"
                ],
                "summary": "Get All Assignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by points",
                        "name": "points",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by due date",
                        "name": "dueDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pagination limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pagination offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Assignment"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments"
                ],
                "summary": "Create Assignment",
                "parameters": [
                    {
                        "description": "Assignment JSON",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                }
            }
        },
        "/assignments/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments"
                ],
                "summary": "Get Assignment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments"
                ],
                "summary": "Update Assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Assignment",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assignments"
                ],
                "summary": "Delete Assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assignments"
                ],
                "summary": "Patch Assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/classrooms": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Get All Classrooms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Classroom"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Create Classroom",
                "parameters": [
                    {
                        "description": "Classroom JSON",
                        "name": "classroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Classroom"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Classroom"
                        }
                    }
                }
            }
        },
        "/classrooms/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Get Classroom by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Classroom"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Update Classroom",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Classroom",
                        "name": "classroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Classroom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Classroom"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Classrooms"
                ],
                "summary": "Delete Classroom",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Patch Classroom",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Partial updates",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Classroom"
                        }
                    }
                }
            }
        },
        "/comments": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get All Comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Comment"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Create Comment",
                "parameters": [
                    {
                        "description": "Comment JSON",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get Comment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Update Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Comment",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Patch a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/mcqs": {
            "get": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Get all MCQs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by bank ID",
                        "name": "bankId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pagination limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pagination offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.MCQ"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCQs"
                ],
                "summary": "Create MCQ",
                "parameters": [
                    {
                        "description": "MCQ JSON",
                        "name": "mcq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questions.MCQ"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/questions.MCQ"
                        }
                    }
                }
            }
        },
        "/mcqs/bulk": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCQs"
                ],
                "summary": "Bulk Create MCQs",
                "parameters": [
                    {
                        "description": "List of MCQs",
                        "name": "mcqs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.MCQ"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.MCQ"
                            }
                        }
                    }
                }
            }
        },
        "/mcqs/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCQs"
                ],
                "summary": "Get MCQ by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MCQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questions.MCQ"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCQs"
                ],
                "summary": "Update MCQ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MCQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated MCQ",
                        "name": "mcq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questions.MCQ"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questions.MCQ"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Delete MCQ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MCQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCQs"
                ],
                "summary": "Patch MCQ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MCQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updates",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questions.MCQ"
                        }
                    }
                }
            }
        },
        "/msqs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MSQs"
                ],
                "summary": "Get All MSQs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by bank ID",
                        "name": "bankId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pagination limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pagination offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.MSQ"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MSQs"
                ],
                "summary": "Create MSQ",
                "parameters": [
                    {
                        "description": "MSQ JSON",
                        "name": "msq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questions.MSQ"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/questions.MSQ"
                        }
                    }
                }
            }
        },
        "/msqs/bulk": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MSQs"
                ],
                "summary": "Bulk Create MSQs",
                "parameters": [
                    {
                        "description": "List of MSQs",
                        "name": "msqs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.MSQ"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.MSQ"
                            }
                        }
                    }
                }
            }
        },
        "/msqs/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MSQs"
                ],
                "summary": "Get MSQ by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MSQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questions.MSQ"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MSQs"
                ],
                "summary": "Update MSQ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MSQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated MSQ",
                        "name": "msq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questions.MSQ"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questions.MSQ"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MSQs"
                ],
                "summary": "Delete MSQ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MSQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MSQs"
                ],
                "summary": "Patch MSQ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MSQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updates",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questions.MSQ"
                        }
                    }
                }
            }
        },
        "/nats": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NATs"
                ],
                "summary": "Get All NATs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by bank ID",
                        "name": "bankId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pagination limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pagination offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.NAT"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NATs"
                ],
                "summary": "Create NAT",
                "parameters": [
                    {
                        "description": "NAT JSON",
                        "name": "nat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questions.NAT"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/questions.NAT"
                        }
                    }
                }
            }
        },
        "/nats/bulk": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NATs"
                ],
                "summary": "Bulk Create NATs",
                "parameters": [
                    {
                        "description": "List of NATs",
                        "name": "nats",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.NAT"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.NAT"
                            }
                        }
                    }
                }
            }
        },
        "/nats/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NATs"
                ],
                "summary": "Get NAT by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NAT ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questions.NAT"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NATs"
                ],
                "summary": "Update NAT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NAT ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated NAT",
                        "name": "nat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questions.NAT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questions.NAT"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "NATs"
                ],
                "summary": "Delete NAT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NAT ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NATs"
                ],
                "summary": "Patch NAT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NAT ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/question-banks": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QuestionBanks"
                ],
                "summary": "Get All QuestionBanks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by topic",
                        "name": "topic",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by teacher ID",
                        "name": "teacherId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tags (comma-separated)",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.QuestionBank"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QuestionBanks"
                ],
                "summary": "Create QuestionBank",
                "parameters": [
                    {
                        "description": "QuestionBank JSON",
                        "name": "questionBank",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.QuestionBank"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.QuestionBank"
                        }
                    }
                }
            }
        },
        "/question-banks/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QuestionBanks"
                ],
                "summary": "Get QuestionBank by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QuestionBank ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.QuestionBank"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QuestionBanks"
                ],
                "summary": "Update QuestionBank",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QuestionBank ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated QuestionBank",
                        "name": "questionBank",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.QuestionBank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.QuestionBank"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "QuestionBanks"
                ],
                "summary": "Delete QuestionBank",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QuestionBank ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QuestionBanks"
                ],
                "summary": "Patch QuestionBank",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QuestionBank ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updates",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.QuestionBank"
                        }
                    }
                }
            }
        },
        "/students": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get All Students",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by roll number",
                        "name": "rollNo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Student"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Create Student",
                "parameters": [
                    {
                        "description": "Student JSON",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                }
            }
        },
        "/students/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get Student by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Update Student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Student",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Students"
                ],
                "summary": "Delete Student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Patch a student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/subjectives": {
            "get": {
                "tags": [
                    "Subjectives"
                ],
                "summary": "Get all Subjectives",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bank ID",
                        "name": "bankId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.Subjective"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjectives"
                ],
                "summary": "Create Subjective",
                "parameters": [
                    {
                        "description": "Subjective Question",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questions.Subjective"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/questions.Subjective"
                        }
                    }
                }
            }
        },
        "/subjectives/bulk": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjectives"
                ],
                "summary": "Bulk Create Subjectives",
                "parameters": [
                    {
                        "description": "List of Subjective Questions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.Subjective"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/questions.Subjective"
                            }
                        }
                    }
                }
            }
        },
        "/subjectives/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjectives"
                ],
                "summary": "Get Subjective by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subjective ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questions.Subjective"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjectives"
                ],
                "summary": "Update Subjective",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subjective",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questions.Subjective"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questions.Subjective"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subjectives"
                ],
                "summary": "Delete Subjective",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subjective ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjectives"
                ],
                "summary": "Patch Subjective",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updates",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/submissions": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submissions"
                ],
                "summary": "Get All Submissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Submission"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submissions"
                ],
                "summary": "Create Submission",
                "parameters": [
                    {
                        "description": "Submission JSON",
                        "name": "submission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            }
        },
        "/submissions/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submissions"
                ],
                "summary": "Get Submission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submissions"
                ],
                "summary": "Update Submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Submission",
                        "name": "submission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Delete Submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submissions"
                ],
                "summary": "Patch a submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/teachers": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Get All Teachers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by phone",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Teacher"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Create Teacher",
                "parameters": [
                    {
                        "description": "Teacher JSON",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                }
            }
        },
        "/teachers/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Get Teacher by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Update Teacher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Teacher",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Delete Teacher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Patch Teacher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updates",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                }
            }
        },
        "/threads": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Get All Threads",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "userId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Thread"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Create Thread",
                "parameters": [
                    {
                        "description": "Thread JSON",
                        "name": "thread",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Thread"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Thread"
                        }
                    }
                }
            }
        },
        "/threads/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Get Thread by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Thread"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Update Thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Thread",
                        "name": "thread",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Thread"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Thread"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Threads"
                ],
                "summary": "Delete Thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threads"
                ],
                "summary": "Patch Thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Thread"
                        }
                    }
                }
            }
        },
        "/variables": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variables"
                ],
                "summary": "Get All Variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Variable"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variables"
                ],
                "summary": "Create Variable",
                "parameters": [
                    {
                        "description": "Variable JSON",
                        "name": "variable",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Variable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Variable"
                        }
                    }
                }
            }
        },
        "/variables/bulk": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variables"
                ],
                "summary": "Bulk Create Variables",
                "parameters": [
                    {
                        "description": "List of Variables",
                        "name": "variables",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Variable"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Variable"
                            }
                        }
                    }
                }
            }
        },
        "/variables/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variables"
                ],
                "summary": "Get Variable by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Variable ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Variable"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variables"
                ],
                "summary": "Update Variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Variable ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Variable",
                        "name": "variable",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Variable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Variable"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Variables"
                ],
                "summary": "Delete Variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Variable ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Variables"
                ],
                "summary": "Patch Variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updates",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Variable"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Assignment": {
            "type": "object",
            "required": [
                "body",
                "dueDate",
                "points",
                "title"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "commentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "mcqIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "msqIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "natIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "points": {
                    "type": "integer",
                    "minimum": 0
                },
                "subjectiveIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Classroom": {
            "type": "object",
            "required": [
                "credits",
                "subject",
                "teacherIds"
            ],
            "properties": {
                "assignmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "credits": {
                    "type": "integer",
                    "minimum": 0
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "subject": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "teacherIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Comment": {
            "type": "object",
            "required": [
                "commentBody"
            ],
            "properties": {
                "commentBody": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.QuestionBank": {
            "type": "object",
            "required": [
                "name",
                "tags",
                "teacherId",
                "topic"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "tags": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "type": "string"
                    }
                },
                "teacherId": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Student": {
            "type": "object",
            "required": [
                "email",
                "name",
                "rollNo"
            ],
            "properties": {
                "classIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "rollNo": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Submission": {
            "type": "object",
            "required": [
                "assignmentId",
                "studentId"
            ],
            "properties": {
                "assignmentId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "mcqAnswers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "msqAnswers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "natAnswers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "studentId": {
                    "type": "string"
                },
                "subjectiveAnswers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Teacher": {
            "type": "object",
            "required": [
                "email",
                "name",
                "phone"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "phone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Thread": {
            "type": "object",
            "required": [
                "body",
                "title",
                "userId"
            ],
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "body": {
                    "type": "string"
                },
                "commentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "model.Variable": {
            "type": "object",
            "required": [
                "name",
                "namePositions",
                "value",
                "valuePositions",
                "variableType"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namePositions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valuePositions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "variableType": {
                    "type": "string"
                }
            }
        },
        "questions.MCQ": {
            "type": "object",
            "required": [
                "answerIndex",
                "bankId",
                "options",
                "points",
                "question"
            ],
            "properties": {
                "answerIndex": {
                    "type": "integer",
                    "minimum": 0
                },
                "bankId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "options": {
                    "type": "array",
                    "minItems": 2,
                    "items": {
                        "type": "string"
                    }
                },
                "points": {
                    "type": "integer",
                    "minimum": 1
                },
                "question": {
                    "type": "string",
                    "minLength": 3
                },
                "updatedAt": {
                    "type": "string"
                },
                "variableIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "questions.MSQ": {
            "type": "object",
            "required": [
                "answerIndices",
                "bankId",
                "options",
                "points",
                "question"
            ],
            "properties": {
                "answerIndices": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "integer"
                    }
                },
                "bankId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "options": {
                    "type": "array",
                    "minItems": 2,
                    "items": {
                        "type": "string"
                    }
                },
                "points": {
                    "type": "integer",
                    "minimum": 1
                },
                "question": {
                    "type": "string",
                    "minLength": 3
                },
                "updatedAt": {
                    "type": "string"
                },
                "variableIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "questions.NAT": {
            "type": "object",
            "required": [
                "answer",
                "bankId",
                "points",
                "question",
                "variable"
            ],
            "properties": {
                "answer": {
                    "type": "number"
                },
                "bankId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "points": {
                    "type": "integer",
                    "minimum": 1
                },
                "question": {
                    "type": "string",
                    "minLength": 3
                },
                "updatedAt": {
                    "type": "string"
                },
                "variable": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/model.Variable"
                    }
                }
            }
        },
        "questions.Subjective": {
            "type": "object",
            "required": [
                "bankId",
                "points",
                "question",
                "variable"
            ],
            "properties": {
                "bankId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "gradingCriteria": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "idealAnswer": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "points": {
                    "type": "integer",
                    "minimum": 0
                },
                "question": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "variable": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/model.Variable"
                    }
                }
            }
        }
    }
}